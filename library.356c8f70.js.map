{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,2KAoBAC,QAAQC,IAAIC,OAAOC,SAASC,MAE5BC,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAC3CJ,EAAAC,KAAKI,UAAUF,iBAAiB,QAASG,EAAAC,yBAEzC,IAAMC,EAAkB,IAAI,EAAAC,EAAAC,UACtBC,GAAkB,EAAAC,EAAAC,mBAAkBC,EAAAC,uBAAyB,IAC1C,EAAAH,EAAAC,mBAAkBC,EAAAE,wB,SAM5BC,EAAmBC,G,OAAnBC,EAAkBC,MAAAC,KAAAC,W,SAAlBH,I,OAAAA,EAAfI,EAAA9B,EAAA,CAAA8B,EAAAC,GAAAC,MAAA,SAAAC,EAAkCR,G,IAExBS,EACAC,EACAC,E,2FAFiBC,EAAkBZ,G,OAAnCS,EAAQI,EAAAC,KACRJ,EAAQD,EAASM,KAAI,SAAAC,G,OAAQA,EAAKC,QAClCN,EAAQD,EAAMK,KAAI,SAAAG,G,OAAQA,EAAKC,OAAOJ,KAAI,SAAAK,G,OAASA,EAAMC,IAAM,SAClDX,EAAMK,KACvB,SAACG,EAAMI,G,OAAWJ,EAAKK,UAAYZ,EAAMW,MAE3CxC,EAAAC,KAAKI,UAAUqC,WAAY,EAAAC,EAAAC,YAAWhB,G,kDAEtCjC,QAAQC,IAAImC,EAAAc,GAAMC,S,2DAVW1B,MAAAC,KAAAC,W,SAgBlBQ,EAAkBiB,G,OAAlBC,EAAiB5B,MAAAC,KAAAC,W,SAAjB0B,I,OAAAA,EAAfzB,EAAA9B,EAAA,CAAA8B,EAAAC,GAAAC,MAAA,SAAAwB,EAAiCF,G,IACzBG,EAKAC,E,yEALAD,EAAkBH,EAAId,IAAG,W,MAACV,EAAA9B,EAAA,CAAA8B,EAAAC,GAAAC,MAAA,SAAAC,EAAMa,G,IAE9Ba,E,yEADN5C,EAAgB+B,GAAKA,E,SACE/B,EAAgB6C,iB,cAAjCD,EAAQrB,EAAAC,K,kBACPoB,G,2DAH6Bb,G,gCAAP,I,SAKAe,QAAQC,IAAIL,G,cAArCC,EAAgBK,EAAAxB,K,kBACfmB,G,2CAPMH,EAAiB5B,MAAAC,KAAAC,WAYhC,SAASlB,EAAUqD,GACa,WAA1BA,EAAMC,OAAOC,WAGjBC,KAAOH,EAAMC,OAAOG,QAAQC,OAC5BnE,QAAQC,IAAI,QAAS6D,EAAMC,OAAOG,QAAQC,QAC1CnE,QAAQC,IAAI,eAAgBgE,MACQ,YAAhCH,EAAMC,OAAOG,QAAQC,QACvB7C,GAAmB,EAAAL,EAAAC,mBAAkBC,EAAAE,yBACrChB,EAAAC,KAAK8D,oBAAoBC,UAAUC,IAAI,UACvCjE,EAAAC,KAAKiE,kBAAkBF,UAAUG,OAAO,YAExCV,EAAMC,OAAOG,QAAQC,OACrB7C,GAAmB,EAAAL,EAAAC,mBAAkBC,EAAAC,uBACrCf,EAAAC,KAAKiE,kBAAkBF,UAAUC,IAAI,UACrCjE,EAAAC,KAAK8D,oBAAoBC,UAAUG,OAAO,YA/Cf,IAA3BxD,EAAgByD,OAClBnD,EAAmBN,GACdhB,QAAQC,IAAI,YA4BnBI,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAqB3CE,EAAA+D,SAASlE,iBAAiB,SAI1B,SAAyBsD,GACnBA,EAAMa,gBAAkBb,EAAMC,SAChC,EAAApD,EAAAiE,iBAJJC,SAASrE,iBAAiB,WAO1B,SAAoBsD,GACC,WAAfA,EAAMgB,OACR,EAAAnE,EAAAiE,iB","sources":["src/script/watched.js"],"sourcesContent":["import { makeMarkup } from './cardMarkup';\nimport { alertNoDataGenresQuery, alertNoDataGenresLocalStrg } from './alerts';\nimport { MovieApi } from './fetchFilms';\nimport {\n  saveOnLocalStorag,\n  getOnLocalStorage,\n  removeOnLocalStorage,\n} from './localStorage';\nimport { refs } from './refs';\nimport { movieCard } from './movieCard';\nimport { closeModal } from './onOpenCard';\nimport { backdrop } from './onOpenCard';\nimport { modal } from './onOpenCard';\nimport { clearCard, onGalleryContainerClick, createMarkup } from './onOpenCard';\nimport { movieCard } from './movieCard';\nimport {\n  localStorageKeyQueue,\n  localStorageKeyWatched,\n} from './localStorageKey';\n\nconsole.log(window.location.href);\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\nrefs.galleryEl.addEventListener('click', onGalleryContainerClick);\n\nconst libraryMovieApi = new MovieApi();\nconst arrIdMovieQueue = getOnLocalStorage(localStorageKeyQueue) || [];\nconst arrIdMovieWathed = getOnLocalStorage(localStorageKeyWatched) || [];\n\nif (arrIdMovieQueue.length !== 0) {\n  startLibraryMarkup(arrIdMovieQueue);\n} else console.log('no queue');\n\nasync function startLibraryMarkup(localStorageBase) {\n  try {\n    const objQueue = await fetchCardsLibrary(localStorageBase);\n    const norm1 = objQueue.map(card => card.data);\n    const norm2 = norm1.map(item => item.genres.map(genre => genre.id || []));\n    const finalcards = norm1.map(\n      (item, index) => (item.genre_ids = norm2[index])\n    );\n    refs.galleryEl.innerHTML = makeMarkup(norm1);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// export { startLibraryMarkup };\n\nasync function fetchCardsLibrary(arr) {\n  const arrayOfPromises = arr.map(async id => {\n    libraryMovieApi.id = id;\n    const response = await libraryMovieApi.fetchMovieById();\n    return response;\n  });\n  const cardMovieLibrary = await Promise.all(arrayOfPromises);\n  return cardMovieLibrary;\n}\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\n\nfunction selectBTN(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  test = event.target.dataset.action;\n  console.log('event', event.target.dataset.action);\n  console.log('const test: ', test);\n  if (event.target.dataset.action === 'watched') {\n    startLibraryMarkup(getOnLocalStorage(localStorageKeyWatched));\n    refs.btnGelleryWatchedEl.classList.add('active');\n    refs.btnGelleryQueueEl.classList.remove('active');\n  } else {\n    event.target.dataset.action === 'queue';\n    startLibraryMarkup(getOnLocalStorage(localStorageKeyQueue));\n    refs.btnGelleryQueueEl.classList.add('active');\n    refs.btnGelleryWatchedEl.classList.remove('active');\n  }\n}\n\nbackdrop.addEventListener('click', onClickBackdrop);\n\ndocument.addEventListener('keydown', onClickEsc);\n\nfunction onClickBackdrop(event) {\n  if (event.currentTarget === event.target) {\n    closeModal();\n  }\n}\nfunction onClickEsc(event) {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n}\n"],"names":["$bpxeT","parcelRequire","console","log","window","location","href","$lyT68","refs","btnHeaderEl","addEventListener","$359123cde4e54e6f$var$selectBTN","galleryEl","$1BmHy","onGalleryContainerClick","$359123cde4e54e6f$var$libraryMovieApi","$BRQVA","MovieApi","$359123cde4e54e6f$var$arrIdMovieQueue","$1hEYs","getOnLocalStorage","$dEUUr","localStorageKeyQueue","localStorageKeyWatched","$359123cde4e54e6f$var$startLibraryMarkup","localStorageBase","$359123cde4e54e6f$var$_startLibraryMarkup","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","objQueue","norm1","norm2","$359123cde4e54e6f$var$fetchCardsLibrary","_ctx","sent","map","card","data","item","genres","genre","id","index","genre_ids","innerHTML","$lyDIR","makeMarkup","t0","message","arr","$359123cde4e54e6f$var$_fetchCardsLibrary","_callee1","arrayOfPromises","cardMovieLibrary","response","fetchMovieById","Promise","all","_ctx1","event","target","nodeName","test","dataset","action","btnGelleryWatchedEl","classList","add","btnGelleryQueueEl","remove","length","backdrop","currentTarget","closeModal","document","code"],"version":3,"file":"library.356c8f70.js.map"}