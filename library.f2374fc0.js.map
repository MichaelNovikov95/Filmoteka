{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,iJAoBAC,QAAQC,IAAIC,OAAOC,SAASC,MAE5BC,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAC3CJ,EAAAC,KAAKI,UAAUF,iBAAiB,QAASG,EAAAC,yBAEzC,MAAMC,EAAkB,IAAI,EAAAC,EAAAC,UACtBC,GAAkB,EAAAC,EAAAC,mBAAkBC,EAAAC,uBAAyB,IAC1C,EAAAH,EAAAC,mBAAkBC,EAAAE,wBAM3CC,eAAeC,EAAmBC,GAChC,IACE,MACMC,SAaVH,eAAiCI,GAC/B,MAAMC,EAAkBD,EAAIE,KAAIN,MAAMO,IACpChB,EAAgBgB,GAAKA,EAErB,aADuBhB,EAAgBiB,oBAIzC,aAD+BC,QAAQC,IAAIL,GApBlBM,CAAkBT,IAClBI,KAAIM,GAAQA,EAAKC,OAClCC,EAAQX,EAAMG,KAAIS,GAAQA,EAAKC,OAAOV,KAAIW,GAASA,EAAMV,IAAM,OAClDJ,EAAMG,KACvB,CAACS,EAAMG,IAAWH,EAAKI,UAAYL,EAAMI,KAE3CnC,EAAAC,KAAKI,UAAUgC,WAAY,EAAA5C,EAAA6C,YAAWlB,GACtC,MAAOmB,GACP5C,QAAQC,IAAI2C,EAAMC,UAkBtB,SAASpC,EAAUqC,GACa,WAA1BA,EAAMC,OAAOC,WAGjBC,KAAOH,EAAMC,OAAOG,QAAQC,OAC5BnD,QAAQC,IAAI,QAAS6C,EAAMC,OAAOG,QAAQC,QAC1CnD,QAAQC,IAAI,eAAgBgD,MACQ,YAAhCH,EAAMC,OAAOG,QAAQC,QACvB5B,GAAmB,EAAAN,EAAAC,mBAAkBC,EAAAE,yBACrChB,EAAAC,KAAK8C,oBAAoBC,UAAUC,IAAI,UACvCjD,EAAAC,KAAKiD,kBAAkBF,UAAUG,OAAO,YAExCV,EAAMC,OAAOG,QAAQC,OACrB5B,GAAmB,EAAAN,EAAAC,mBAAkBC,EAAAC,uBACrCf,EAAAC,KAAKiD,kBAAkBF,UAAUC,IAAI,UACrCjD,EAAAC,KAAK8C,oBAAoBC,UAAUG,OAAO,YA/Cf,IAA3BxC,EAAgByC,OAClBlC,EAAmBP,GACdhB,QAAQC,IAAI,YA4BnBI,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAqB3CE,EAAA+C,SAASlD,iBAAiB,SAI1B,SAAyBsC,GACnBA,EAAMa,gBAAkBb,EAAMC,SAChC,EAAApC,EAAAiD,iBAJJC,SAASrD,iBAAiB,WAO1B,SAAoBsC,GACC,WAAfA,EAAMgB,OACR,EAAAnD,EAAAiD","sources":["src/script/watched.js"],"sourcesContent":["import { makeMarkup } from './cardMarkup';\nimport { alertNoDataGenresQuery, alertNoDataGenresLocalStrg } from './alerts';\nimport { MovieApi } from './fetchFilms';\nimport {\n  saveOnLocalStorag,\n  getOnLocalStorage,\n  removeOnLocalStorage,\n} from './localStorage';\nimport { refs } from './refs';\nimport { movieCard } from './movieCard';\nimport { closeModal } from './onOpenCard';\nimport { backdrop } from './onOpenCard';\nimport { modal } from './onOpenCard';\nimport { clearCard, onGalleryContainerClick, createMarkup } from './onOpenCard';\nimport { movieCard } from './movieCard';\nimport {\n  localStorageKeyQueue,\n  localStorageKeyWatched,\n} from './localStorageKey';\n\nconsole.log(window.location.href);\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\nrefs.galleryEl.addEventListener('click', onGalleryContainerClick);\n\nconst libraryMovieApi = new MovieApi();\nconst arrIdMovieQueue = getOnLocalStorage(localStorageKeyQueue) || [];\nconst arrIdMovieWathed = getOnLocalStorage(localStorageKeyWatched) || [];\n\nif (arrIdMovieQueue.length !== 0) {\n  startLibraryMarkup(arrIdMovieQueue);\n} else console.log('no queue');\n\nasync function startLibraryMarkup(localStorageBase) {\n  try {\n    const objQueue = await fetchCardsLibrary(localStorageBase);\n    const norm1 = objQueue.map(card => card.data);\n    const norm2 = norm1.map(item => item.genres.map(genre => genre.id || []));\n    const finalcards = norm1.map(\n      (item, index) => (item.genre_ids = norm2[index])\n    );\n    refs.galleryEl.innerHTML = makeMarkup(norm1);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// export { startLibraryMarkup };\n\nasync function fetchCardsLibrary(arr) {\n  const arrayOfPromises = arr.map(async id => {\n    libraryMovieApi.id = id;\n    const response = await libraryMovieApi.fetchMovieById();\n    return response;\n  });\n  const cardMovieLibrary = await Promise.all(arrayOfPromises);\n  return cardMovieLibrary;\n}\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\n\nfunction selectBTN(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  test = event.target.dataset.action;\n  console.log('event', event.target.dataset.action);\n  console.log('const test: ', test);\n  if (event.target.dataset.action === 'watched') {\n    startLibraryMarkup(getOnLocalStorage(localStorageKeyWatched));\n    refs.btnGelleryWatchedEl.classList.add('active');\n    refs.btnGelleryQueueEl.classList.remove('active');\n  } else {\n    event.target.dataset.action === 'queue';\n    startLibraryMarkup(getOnLocalStorage(localStorageKeyQueue));\n    refs.btnGelleryQueueEl.classList.add('active');\n    refs.btnGelleryWatchedEl.classList.remove('active');\n  }\n}\n\nbackdrop.addEventListener('click', onClickBackdrop);\n\ndocument.addEventListener('keydown', onClickEsc);\n\nfunction onClickBackdrop(event) {\n  if (event.currentTarget === event.target) {\n    closeModal();\n  }\n}\nfunction onClickEsc(event) {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n}\n"],"names":["$1ikH7","parcelRequire","console","log","window","location","href","$5MPmM","refs","btnHeaderEl","addEventListener","$486368a88b4bb2c2$var$selectBTN","galleryEl","$dbdo4","onGalleryContainerClick","$486368a88b4bb2c2$var$libraryMovieApi","$38cRt","MovieApi","$486368a88b4bb2c2$var$arrIdMovieQueue","$7ol1T","getOnLocalStorage","$5o4cU","localStorageKeyQueue","localStorageKeyWatched","async","$486368a88b4bb2c2$var$startLibraryMarkup","localStorageBase","norm1","arr","arrayOfPromises","map","id","fetchMovieById","Promise","all","$486368a88b4bb2c2$var$fetchCardsLibrary","card","data","norm2","item","genres","genre","index","genre_ids","innerHTML","makeMarkup","error","message","event","target","nodeName","test","dataset","action","btnGelleryWatchedEl","classList","add","btnGelleryQueueEl","remove","length","backdrop","currentTarget","closeModal","document","code"],"version":3,"file":"library.f2374fc0.js.map"}