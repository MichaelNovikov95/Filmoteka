{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,sDAUAC,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAE3C,MAAMC,EAAkB,IAAI,EAAAC,EAAAC,UAKtBC,GAAkB,EAAAC,EAAAC,mBAHK,UAGsC,GAC7DC,GAAmB,EAAAF,EAAAC,mBAHM,YAGuC,GAMtEE,eAAeC,EAAmBC,GAChC,IACE,MACMC,SAWVH,eAAiCI,GAC/B,MAAMC,EAAkBD,EAAIE,KAAIN,MAAMO,IACpCd,EAAgBc,GAAKA,EAErB,aADuBd,EAAgBe,oBAIzC,aAD+BC,QAAQC,IAAIL,GAlBlBM,CAAkBT,IAClBI,KAAIM,GAAQA,EAAKC,OAClCC,EAAQX,EAAMG,KAAIS,GAAQA,EAAKC,OAAOV,KAAIW,GAASA,EAAMV,IAAM,OAClDJ,EAAMG,KACvB,CAACS,EAAMG,IAAWH,EAAKI,UAAYL,EAAMI,KAE3C9B,EAAAC,KAAK+B,UAAUC,WAAY,EAAAnC,EAAAoC,YAAWnB,GACtC,MAAOoB,GACPC,QAAQC,IAAIF,EAAMG,UAgBtB,SAASlC,EAAUmC,GACa,WAA1BA,EAAMC,OAAOC,WAGmB,YAAhCF,EAAMC,OAAOE,QAAQC,QACvB9B,EAAmBF,GACnBX,EAAAC,KAAK2C,oBAAoBC,UAAUC,IAAI,UACvC9C,EAAAC,KAAK8C,kBAAkBF,UAAUG,OAAO,YAExCT,EAAMC,OAAOE,QAAQC,OACrB9B,EAAmBL,GACnBR,EAAAC,KAAK8C,kBAAkBF,UAAUC,IAAI,UACrC9C,EAAAC,KAAK2C,oBAAoBC,UAAUG,OAAO,YA1Cf,IAA3BxC,EAAgByC,OAClBpC,EAAmBL,GACd4B,QAAQC,IAAI,YA0BnBrC,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC","sources":["src/script/watched.js"],"sourcesContent":["import { makeMarkup } from './cardMarkup';\nimport { alertNoDataGenresQuery, alertNoDataGenresLocalStrg } from './alerts';\nimport { MovieApi } from './fetchFilms';\nimport {\n  saveOnLocalStorag,\n  getOnLocalStorage,\n  removeOnLocalStorage,\n} from './localStorage';\nimport { refs } from './refs';\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\n\nconst libraryMovieApi = new MovieApi();\n\nconst localStorageKeyQueue = 'queue';\nconst localStorageKeyWatched = 'watched';\n\nconst arrIdMovieQueue = getOnLocalStorage(localStorageKeyQueue) || [];\nconst arrIdMovieWathed = getOnLocalStorage(localStorageKeyWatched) || [];\n\nif (arrIdMovieQueue.length !== 0) {\n  startLibraryMarkup(arrIdMovieQueue);\n} else console.log('no queue');\n\nasync function startLibraryMarkup(localStorageBase) {\n  try {\n    const objQueue = await fetchCardsLibrary(localStorageBase);\n    const norm1 = objQueue.map(card => card.data);\n    const norm2 = norm1.map(item => item.genres.map(genre => genre.id || []));\n    const finalcards = norm1.map(\n      (item, index) => (item.genre_ids = norm2[index])\n    );\n    refs.galleryEl.innerHTML = makeMarkup(norm1);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function fetchCardsLibrary(arr) {\n  const arrayOfPromises = arr.map(async id => {\n    libraryMovieApi.id = id;\n    const response = await libraryMovieApi.fetchMovieById();\n    return response;\n  });\n  const cardMovieLibrary = await Promise.all(arrayOfPromises);\n  return cardMovieLibrary;\n}\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\n\nfunction selectBTN(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  if (event.target.dataset.action === 'watched') {\n    startLibraryMarkup(arrIdMovieWathed);\n    refs.btnGelleryWatchedEl.classList.add('active');\n    refs.btnGelleryQueueEl.classList.remove('active');\n  } else {\n    event.target.dataset.action === 'queue';\n    startLibraryMarkup(arrIdMovieQueue);\n    refs.btnGelleryQueueEl.classList.add('active');\n    refs.btnGelleryWatchedEl.classList.remove('active');\n  }\n}\n// elem.classList.add(cls)\n// elem.classList.remove(cls)\n\n// function addToWatched(idMovie) {\n//   const newArrIdMovie = [...getOnLocalStorage(localStorageKeyWatched), idMovie];\n//   saveOnLocalStorag(localStorageKeyWatched, newArrIdMovie);\n// }\n\n// function addToQueue(idMovie) {\n//   const newArrIdMovie = [...getOnLocalStorage(localStorageKeyQueue), idMovie];\n//   saveOnLocalStorag(localStorageKeyQueue, newArrIdMovie);\n// }\n\n// function removeOnWatched(idMovie) {\n//   const newArrIdMovie = [...getOnLocalStorage(localStorageKeyWatched), idMovie];\n//   removeOnLocalStorage;\n// }\n\n// function checkLocalStorageWatched(id) {\n//   const checkStorage = getOnLocalStorage(`watched`) || [];\n//   const idsCheckStorage = checkStorage.map(item => item.id);\n//   if (!idsCheckStorage.includes(id)) {\n//     refs.selectBtn.textContent = `ADD TO WATCHED`;\n//     return;\n//   }\n\n//   selectBtn.textContent = `REMOVE FROM WATCHED`;\n// }\n\n// function checkLocalStorageQueue(id) {\n//   const checkStorage = getOnLocalStorage(`watched`) || [];\n//   const idsCheckStorage = checkStorage.map(item => item.id);\n//   const selectBtn = modal_film.querySelector(`button[data-action=\"queue\"]`);\n\n//   if (!idsCheckStorage.includes(id)) {\n//     selectBtn.textContent = `ADD TO QUEUE`;\n//     return;\n//   }\n\n//   selectBtn.textContent = `REMOVE FROM QUEUE`;\n// }\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// function addRemoveToListBtns(e) {\n//   const checkBtn = e.target.dataset.action;\n//   const movie = JSON.parse(sessionStorage.getItem('currentMovie'));\n\n//   if (checkBtn === 'watched') {\n//     addRemoveFromStorage(movie, checkBtn);\n//     checkQueueStorage(movie);\n//     return;\n//   }\n//   if (checkBtn === 'queue') {\n//     addRemoveFromStorage(movie, checkBtn);\n//     checkWatchedStorage(movie, checkBtn);\n//     return;\n//   }\n//   if (checkBtn === 'closeBackdrop' || modalFilmInfo) {\n//     modalFilmInfo.classList.add('goodby_modal');\n//     modalFilmInfo.innerHTML = '';\n//     return;\n//   }\n// }\n\n// function addRemoveFromStorage(movie, title) {\n//   const moviesWatched = JSON.parse(localStorage.getItem(`${title}`) || '[]');\n//   const selectBtn = modalFilmInfo.querySelector(\n//     `button[data-action=\"${title}\"]`\n//   );\n//   const moviesId = moviesWatched.map(item => item.id);\n\n//   if (!moviesId.includes(movie.id)) {\n//     moviesWatched.push(movie);\n//     localStorage.setItem(`${title}`, JSON.stringify(moviesWatched));\n\n//     selectBtn.textContent = `REMOVE FROM ${title.toUpperCase()}`;\n//     return;\n//   }\n//   const movieIndex = moviesWatched.findIndex(item => item.id === movie.id);\n//   moviesWatched.splice(movieIndex, 1);\n//   localStorage.setItem(`${title}`, JSON.stringify(moviesWatched));\n\n//   selectBtn.textContent = `ADD TO ${title.toUpperCase()}`;\n// }\n\n// function checkWatchedStorage(movie) {\n//   const moviesWatched = JSON.parse(localStorage.getItem(`watched`));\n//   const selectBtn = modalFilmInfo.querySelector(\n//     `button[data-action=\"watched\"]`\n//   );\n\n//   const movieIndex = moviesWatched.findIndex(item => item.id === movie.id);\n\n//   if (movieIndex !== -1) {\n//     moviesWatched.splice(movieIndex, 1);\n//     localStorage.setItem(`watched`, JSON.stringify(moviesWatched));\n\n//     selectBtn.textContent = 'ADD TO WATCHED';\n//   }\n// }\n\n// function checkQueueStorage(movie) {\n//   const moviesQueue = JSON.parse(localStorage.getItem(`queue`));\n//   const selectBtn = modalFilmInfo.querySelector(`button[data-action=\"queue\"]`);\n\n//   const movieIndex = moviesQueue.findIndex(item => item.id === movie.id);\n\n//   if (movieIndex !== -1) {\n//     moviesQueue.splice(movieIndex, 1);\n//     localStorage.setItem(`queue`, JSON.stringify(moviesQueue));\n\n//     selectBtn.textContent = 'ADD TO QUEUE';\n//   }\n// }\n"],"names":["$1ikH7","parcelRequire","$5MPmM","refs","btnHeaderEl","addEventListener","$486368a88b4bb2c2$var$selectBTN","$486368a88b4bb2c2$var$libraryMovieApi","$38cRt","MovieApi","$486368a88b4bb2c2$var$arrIdMovieQueue","$7ol1T","getOnLocalStorage","$486368a88b4bb2c2$var$arrIdMovieWathed","async","$486368a88b4bb2c2$var$startLibraryMarkup","localStorageBase","norm1","arr","arrayOfPromises","map","id","fetchMovieById","Promise","all","$486368a88b4bb2c2$var$fetchCardsLibrary","card","data","norm2","item","genres","genre","index","genre_ids","galleryEl","innerHTML","makeMarkup","error","console","log","message","event","target","nodeName","dataset","action","btnGelleryWatchedEl","classList","add","btnGelleryQueueEl","remove","length"],"version":3,"file":"library.4e26b622.js.map"}