{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,2KAoBAC,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAC3CJ,EAAAC,KAAKI,UAAUF,iBAAiB,QAASG,EAAAC,yBAEzC,IAAMC,EAAkB,IAAI,EAAAC,EAAAC,UAEtBC,GAAkB,EAAAC,EAAAC,mBAAkBC,EAAAC,uBAAyB,GAC7DC,GAAmB,EAAAJ,EAAAC,mBAAkBC,EAAAG,yBAA2B,G,SAMvDC,EAAmBC,G,OAAnBC,EAAkBC,MAAAC,KAAAC,W,SAAlBH,I,OAAAA,EAAfI,EAAA1B,EAAA,CAAA0B,EAAAC,GAAAC,MAAA,SAAAC,EAAkCR,G,IAExBS,EACAC,EACAC,E,2FAFiBC,EAAkBZ,G,OAAnCS,EAAQI,EAAAC,KACRJ,EAAQD,EAASM,KAAI,SAAAC,G,OAAQA,EAAKC,QAClCN,EAAQD,EAAMK,KAAI,SAAAG,G,OAAQA,EAAKC,OAAOJ,KAAI,SAAAK,G,OAASA,EAAMC,IAAM,SAClDX,EAAMK,KACvB,SAACG,EAAMI,G,OAAWJ,EAAKK,UAAYZ,EAAMW,MAE3CzC,EAAAC,KAAKI,UAAUsC,WAAY,EAAAC,EAAAC,YAAWhB,G,kDAEtCiB,QAAQC,IAAIf,EAAAgB,GAAMC,S,2DAVW5B,MAAAC,KAAAC,W,SAgBlBQ,EAAkBmB,G,OAAlBC,EAAiB9B,MAAAC,KAAAC,W,SAAjB4B,I,OAAAA,EAAf3B,EAAA1B,EAAA,CAAA0B,EAAAC,GAAAC,MAAA,SAAA0B,EAAiCF,G,IACzBG,EAKAC,E,yEALAD,EAAkBH,EAAIhB,IAAG,W,MAACV,EAAA1B,EAAA,CAAA0B,EAAAC,GAAAC,MAAA,SAAAC,EAAMa,G,IAE9Be,E,yEADN/C,EAAgBgC,GAAKA,E,SACEhC,EAAgBgD,iB,cAAjCD,EAAQvB,EAAAC,K,kBACPsB,G,2DAH6Bf,G,gCAAP,I,SAKAiB,QAAQC,IAAIL,G,cAArCC,EAAgBK,EAAA1B,K,kBACfqB,G,2CAPMH,EAAiB9B,MAAAC,KAAAC,WAYhC,SAASnB,EAAUwD,GACa,WAA1BA,EAAMC,OAAOC,WAGmB,YAAhCF,EAAMC,OAAOE,QAAQC,QACvB9C,EAAmBF,GACnBhB,EAAAC,KAAKgE,oBAAoBC,UAAUC,IAAI,UACvCnE,EAAAC,KAAKmE,kBAAkBF,UAAUG,OAAO,YAExCT,EAAMC,OAAOE,QAAQC,OACrB9C,EAAmBP,GACnBX,EAAAC,KAAKmE,kBAAkBF,UAAUC,IAAI,UACrCnE,EAAAC,KAAKgE,oBAAoBC,UAAUG,OAAO,YA5Cf,IAA3B1D,EAAgB2D,OAClBpD,EAAmBP,GACdmC,QAAQC,IAAI,YA4BnB/C,EAAAC,KAAKC,YAAYC,iBAAiB,QAASC,GAkB3CE,EAAAiE,SAASpE,iBAAiB,SAI1B,SAAyByD,GACnBA,EAAMY,gBAAkBZ,EAAMC,SAChC,EAAAvD,EAAAmE,iBAJJC,SAASvE,iBAAiB,WAO1B,SAAoByD,GACC,WAAfA,EAAMe,OACR,EAAArE,EAAAmE,iB","sources":["src/script/watched.js"],"sourcesContent":["import { makeMarkup } from './cardMarkup';\nimport { alertNoDataGenresQuery, alertNoDataGenresLocalStrg } from './alerts';\nimport { MovieApi } from './fetchFilms';\nimport {\n  saveOnLocalStorag,\n  getOnLocalStorage,\n  removeOnLocalStorage,\n} from './localStorage';\nimport { refs } from './refs';\nimport { movieCard } from './movieCard';\nimport { closeModal } from './onOpenCard';\nimport { backdrop } from './onOpenCard';\nimport { modal } from './onOpenCard';\nimport { clearCard, onGalleryContainerClick, createMarkup } from './onOpenCard';\nimport { movieCard } from './movieCard';\nimport {\n  localStorageKeyQueue,\n  localStorageKeyWatched,\n} from './localStorageKey';\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\nrefs.galleryEl.addEventListener('click', onGalleryContainerClick);\n\nconst libraryMovieApi = new MovieApi();\n\nconst arrIdMovieQueue = getOnLocalStorage(localStorageKeyQueue) || [];\nconst arrIdMovieWathed = getOnLocalStorage(localStorageKeyWatched) || [];\n\nif (arrIdMovieQueue.length !== 0) {\n  startLibraryMarkup(arrIdMovieQueue);\n} else console.log('no queue');\n\nasync function startLibraryMarkup(localStorageBase) {\n  try {\n    const objQueue = await fetchCardsLibrary(localStorageBase);\n    const norm1 = objQueue.map(card => card.data);\n    const norm2 = norm1.map(item => item.genres.map(genre => genre.id || []));\n    const finalcards = norm1.map(\n      (item, index) => (item.genre_ids = norm2[index])\n    );\n    refs.galleryEl.innerHTML = makeMarkup(norm1);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\n// export { startLibraryMarkup };\n\nasync function fetchCardsLibrary(arr) {\n  const arrayOfPromises = arr.map(async id => {\n    libraryMovieApi.id = id;\n    const response = await libraryMovieApi.fetchMovieById();\n    return response;\n  });\n  const cardMovieLibrary = await Promise.all(arrayOfPromises);\n  return cardMovieLibrary;\n}\n\nrefs.btnHeaderEl.addEventListener('click', selectBTN);\n\nfunction selectBTN(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  if (event.target.dataset.action === 'watched') {\n    startLibraryMarkup(arrIdMovieWathed);\n    refs.btnGelleryWatchedEl.classList.add('active');\n    refs.btnGelleryQueueEl.classList.remove('active');\n  } else {\n    event.target.dataset.action === 'queue';\n    startLibraryMarkup(arrIdMovieQueue);\n    refs.btnGelleryQueueEl.classList.add('active');\n    refs.btnGelleryWatchedEl.classList.remove('active');\n  }\n}\n\nbackdrop.addEventListener('click', onClickBackdrop);\n\ndocument.addEventListener('keydown', onClickEsc);\n\nfunction onClickBackdrop(event) {\n  if (event.currentTarget === event.target) {\n    closeModal();\n  }\n}\nfunction onClickEsc(event) {\n  if (event.code === 'Escape') {\n    closeModal();\n  }\n}\n"],"names":["$bpxeT","parcelRequire","$lyT68","refs","btnHeaderEl","addEventListener","$359123cde4e54e6f$var$selectBTN","galleryEl","$1BmHy","onGalleryContainerClick","$359123cde4e54e6f$var$libraryMovieApi","$BRQVA","MovieApi","$359123cde4e54e6f$var$arrIdMovieQueue","$1hEYs","getOnLocalStorage","$dEUUr","localStorageKeyQueue","$359123cde4e54e6f$var$arrIdMovieWathed","localStorageKeyWatched","$359123cde4e54e6f$var$startLibraryMarkup","localStorageBase","$359123cde4e54e6f$var$_startLibraryMarkup","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","objQueue","norm1","norm2","$359123cde4e54e6f$var$fetchCardsLibrary","_ctx","sent","map","card","data","item","genres","genre","id","index","genre_ids","innerHTML","$lyDIR","makeMarkup","console","log","t0","message","arr","$359123cde4e54e6f$var$_fetchCardsLibrary","_callee1","arrayOfPromises","cardMovieLibrary","response","fetchMovieById","Promise","all","_ctx1","event","target","nodeName","dataset","action","btnGelleryWatchedEl","classList","add","btnGelleryQueueEl","remove","length","backdrop","currentTarget","closeModal","document","code"],"version":3,"file":"library.cf672f3b.js.map"}